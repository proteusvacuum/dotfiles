"
" Maintainer:	Bram Moolenaar <Bram@vim.org>
" Last change:	2008 Dec 17
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"	      for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"	    for OpenVMS:  sys$login:.vimrc

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" PLUGINS
filetype off
set rtp+=~/.dotfiles/vim/bundle/Vundle.vim
call vundle#begin('~/.dotfiles/vim/bundle')

Plugin 'gmarik/Vundle.vim'

Plugin 'bling/vim-airline'
Plugin 'vim-scripts/The-NERD-tree.git'

Plugin 'airblade/vim-gitgutter'
Plugin 'tpope/vim-fugitive'

" Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-commentary'
" Plugin 'tomtom/tcomment_vim'
" Plugin 'msanders/snipmate.vim'
" Plugin 'sjl/gundo.vim'

Plugin 'mileszs/ack.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'Yggdroot/indentLine'
Plugin 'qpkorr/vim-bufkill'

" Python plugins
" Plugin 'klen/python-mode'
Plugin 'davidhalter/jedi-vim'
Plugin 'majutsushi/tagbar'
Plugin 'hdima/python-syntax'
Plugin 'scrooloose/syntastic'

Plugin 'fholgado/minibufexpl.vim'
" Plugin 'bling/vim-bufferline'
Plugin 'marijnh/tern_for_vim'
call vundle#end()
" END PLUGINS


" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file
endif
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching
set showmatch
set ruler
set wildmenu
set enc=utf-8
set number
set relativenumber
set autoread
set splitbelow
set splitright
set hidden
set tabstop=4
set expandtab
set shiftwidth=4
" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

if has('mouse')
  set mouse=a
endif

if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
  colorscheme monokai
endif


" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 115 characters.
  autocmd FileType text setlocal textwidth=115

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  " Also don't do it when the mark is in the first line, that is the default
  " position when opening a file.
  autocmd BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else

  set autoindent		" always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
		\ | wincmd p | diffthis
endif

set foldmethod=indent
set foldlevel=99
set nowrap

set tags+=../tags

" GitGutter
let g:gitgutter_realtime = 1
let g:gitgutter_sign_column_always = 1


let g:syntastic_always_populate_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let g:airline#extensions#syntastic#enabled = 1
let g:airline#extensions#syntastic#enabled = 1

" Jedi
let g:jedi#use_tabs_not_buffers = 0
let g:jedi#show_call_signatures = "0"

" Airline
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#buffer_nr_show = 1
set laststatus=2
let g:airline_powerline_fonts = 1

" CtrlP
" let g:ctrlp_prompt_mappings = {'AcceptSelection("e")': ['<c-t>'], 'AcceptSelection("t")': ['<cr>', '<2-LeftMouse>']}
set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/.pyc

let g:indentLine_char = 'â”Š'

" Ag
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

" Keybindings
map <leader>kb :NERDTree<CR>
map <leader>kbc :NERDTreeClose<CR>
map <leader>kbf :NERDTreeFind<CR>
nmap <leader>f <Esc>:Ack!
nmap <leader>[ :bp<CR>
nmap <leader>] :bn<CR>
nmap <leader>w :BD<CR>
